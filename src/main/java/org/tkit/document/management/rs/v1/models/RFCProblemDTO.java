package org.tkit.document.management.rs.v1.models;

import java.util.ArrayList;
import java.util.List;

import javax.validation.Valid;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.quarkus.runtime.annotations.RegisterForReflection;
import lombok.*;

@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString(onlyExplicitlyIncluded = true)
@Getter
@Setter
@RegisterForReflection
public class RFCProblemDTO {
    /**
     * A URI reference [RFC3986] that identifies the
     * problem type. This specification encourages that, when
     * dereferenced, it provide human-readable documentation for the
     * problem type (e.g., using HTML [W3C.REC-html5-20141028]). When
     * this member is not present, its value is assumed to be
     * "about:blank".
     */
    @JsonProperty(value = "type", required = true)
    @ToString.Include
    private @Valid String type = "about:blank";

    /**
     * A short, human-readable summary of the problem
     * type. It SHOULD NOT change from occurrence to occurrence of the
     * problem, except for purposes of localization (e.g., using
     * proactive content negotiation; see [RFC7231], Section 3.4).
     */
    @JsonProperty(value = "title", required = true)
    @ToString.Include
    private @Valid String title = null;

    /**
     * The HTTP status code ([RFC7231], Section 6)
     * generated by the origin server for this occurrence of the problem.
     */
    @JsonProperty(value = "status")
    @ToString.Include
    private @Valid Integer status = null;

    /** A human-readable explanation specific to this occurrence of the problem. */
    @JsonProperty(value = "detail")
    private @Valid String detail = null;

    /**
     * A URI reference that identifies the specific
     * occurrence of the problem. It may or may not yield further information if dereferenced.
     */
    @JsonProperty(value = "instance")
    private @Valid String instance = null;

    @JsonProperty(value = "problems")
    private @Valid List<RFCProblemDetailDTO> problems = new ArrayList<>();
}
